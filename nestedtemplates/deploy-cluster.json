{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ResourcenamePrefix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 25,
      "metadata": {
        "description": "Resource Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
      }
    },
    "VMnamePrefix": {
      "type": "string",
      "minLength": 3,
      "maxLength": 12,
      "metadata": {
        "description": "VM Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
      }
    },
    "AVSet": {
      "type": "string",
      "AllowedValues": [
        "True",
        "False"
      ],
      "DefaultValue": "False",
      "metadata": {
        "description": "Should an AV set be created? True of False"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "DNS domain name for existing Active Directory domain"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Name of the Administrator of the existing Active Directory Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "Password for the Administrator account of the existing Active Directory Domain"
      }
    },
    "svcUsername": {
      "type": "string",
      "metadata": {
        "description": "Name of the Service Account in the existing Active Directory Domain"
      }
    },
    "svcPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "Password for the Service Account in the existing Active Directory Domain"
      }
    },
    "nicSubnetUri": {
      "type": "string",
      "metadata": {
        "description": "Resource ID for existing vnet/subnet to which VM NICs should be attached"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the VMs to be created"
      }
    },
    "vmCount": {
      "type": "int",
      "minValue": 1,
      "maxValue": 10,
      "metadata": {
        "description": "Number of VMs to be created in cluster (Min=2, Max=3)"
      }
    },
    "vmDiskSize": {
      "type": "int",
      "minValue": 128,
      "maxValue": 2046,
      "metadata": {
        "description": "Size of each data disk in GB on each VM (Min=128, Max=1023)"
      }
    },
    "vmDiskCount": {
      "type": "int",
      "minValue": 2,
      "maxValue": 32,
      "metadata": {
        "description": "Number of data disks on each VM (Min=2, Max=32). Ensure that the VM size you've selected will support this number of data disks."
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer"
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer"
    },
    "imageSKU": {
      "type": "string",
      "allowedvalues": [
        "2016-Datacenter",
        "2012-R2-Datacenter"
      ],
      "defaultValue": "2016-Datacenter"
    },
    "imageVersion": {
      "type": "string",
      "defaultValue": "latest"
    },
    "_artifactsLocation": {
      "type": "string"
    },
    "_artifactsLocationSasToken": {
      "type": "string"
    }
  },
  "variables": {
    "apiVersionStorage": "2016-01-01",
    "vmNametypePrefix": "[concat(parameters('VMnamePrefix'),'ap')]",
    "vmAvailabilitySetName": "[concat(parameters('ResourcenamePrefix'),'.as')]",
    "vmLoopTemplateURL": "[concat(parameters('_artifactsLocation'),'/nestedtemplates/newVM.json',parameters('_artifactsLocationSasToken'))]",
    "PrepModulesURL": "[concat(parameters('_artifactsLocation'),'/dsc/prep.ps1.zip',parameters('_artifactsLocationSasToken'))]",
    "PrepFunction": "Prep.ps1\\Prep",
    "ConfigModulesURL": "[concat(parameters('_artifactsLocation'),'/dsc/config.ps1.zip',parameters('_artifactsLocationSasToken'))]",
    "ConfigFunction": "Config.ps1\\Config"
  },
  "resources": [
    {
      "condition": "[equals(parameters('AVSet'),'True')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('vmAvailabilitySetName')]",
      "apiVersion": "2017-12-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      },
      "comments": "This is the availability set for the cluster nodes.  It's configured as aligned to support managed disks"
    },
    {
      "name": "[concat(variables('vmNametypePrefix'), padLeft(copyindex(1),3,'0'), '-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2017-10-01",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('nicSubnetUri')]"
              }
            }
          }
        ]
      },
      "comments": "The NICs for the SQL cluster nodes"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('vmCount')]"
      },
      "name": "[concat(variables('vmNametypePrefix'),padLeft(copyindex(1),3,'0'))]",
      "dependsOn": [
        "nicLoop",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('vmAvailabilitySetName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmLoopTemplateURL')]"
        },
        "parameters": {
          "vmName": {
            "value": "[concat(variables('vmNametypePrefix'),padLeft(copyindex(1),3,'0'))]"
          },
          "vmAvailabilitySetName": {
            "value": "[variables('vmAvailabilitySetName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "vmDiskCount": {
            "value": "[parameters('vmDiskCount')]"
          },
          "vmDiskSize": {
            "value": "[parameters('vmDiskSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "imagePublisher": {
            "value": "[parameters('imagePublisher')]"
          },
          "imageOffer": {
            "value": "[parameters('imageOffer')]"
          },
          "imageSKU": {
            "value": "[parameters('imageSKU')]"
          },
          "imageVersion": {
            "value": "[parameters('imageVersion')]"
          }
        }
      },
      "comments": "This loop deploys the cluster nodes via a nested template"
    },
    {
      "apiVersion": "2017-12-01",
      "comments": "This VM DSC extension prepares the server",
      "copy": {
        "name": "virtualMachineExtensionLoop",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "virtualMachineLoop"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('vmNametypePrefix'), padLeft(copyindex(1),3,'0'),'/sfciPrep')]",
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.20",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[variables('PrepModulesURL')]",
          "configurationFunction": "[variables('PrepFunction')]",
          "properties": {
            "domainName": "[parameters('domainName')]",
            "adminCreds": {
              "userName": "[parameters('adminUserName')]",
              "password": "PrivateSettingsRef:adminPassword"
            },
            "svcCreds": {
              "userName": "[parameters('svcUserName')]",
              "password": "PrivateSettingsRef:svcPassword"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]",
            "svcPassword": "[parameters('svcPassword')]"
          }
        }
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ]
      
}
